=begin
#gateway_timesheets API

#gateway_timesheets API documentation

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module SwaggerClient
  class UserjwtcontrollerApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # authorize
    # 
    # @param login_vm loginVM
    # @param [Hash] opts the optional parameters
    # @return [JWTToken]
    def authorize_using_post(login_vm, opts = {})
      data, _status_code, _headers = authorize_using_post_with_http_info(login_vm, opts)
      #byebug
      return data, _headers
    end

    # authorize
    # 
    # @param login_vm loginVM
    # @param [Hash] opts the optional parameters
    # @return [Array<(JWTToken, Fixnum, Hash)>] JWTToken data, response status code and response headers
    def authorize_using_post_with_http_info(login_vm, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: UserjwtcontrollerApi.authorize_using_post ..."
      end
      # verify the required parameter 'login_vm' is set
      if @api_client.config.client_side_validation && login_vm.nil?
        fail ArgumentError, "Missing the required parameter 'login_vm' when calling UserjwtcontrollerApi.authorize_using_post"
      end
      # resource path
      local_var_path = "/api/authenticate"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(login_vm)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'JWTToken')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UserjwtcontrollerApi#authorize_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end